---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE } from '../consts';
import { projects } from '../data/projects';

const pageTitle = `${SITE_TITLE} · Project Log`;
const tags = Array.from(new Set(projects.flatMap((project) => project.tags))).sort();
---

<!doctype html>
<html lang="en">
        <head>
                <BaseHead title={pageTitle} description="Explore engineering projects delivered across platform, robotics, and developer experience." />
                <style>
                        main {
                                width: min(1200px, calc(100% - 3rem));
                                margin: clamp(6rem, 10vw, 8rem) auto 5rem;
                                display: grid;
                                gap: 3rem;
                        }
                        .page-intro {
                                display: grid;
                                gap: 1.25rem;
                                text-align: center;
                        }
                        .filters {
                                display: flex;
                                flex-wrap: wrap;
                                justify-content: center;
                                gap: 0.75rem;
                        }
                        .filters button {
                                border-radius: 999px;
                                border: 1px solid rgba(15, 23, 42, 0.12);
                                background: rgba(248, 250, 252, 0.9);
                                padding: 0.6rem 1.4rem;
                                font-weight: 600;
                                letter-spacing: 0.05em;
                                text-transform: uppercase;
                                font-size: 0.8rem;
                                color: rgb(var(--black));
                                cursor: pointer;
                                transition: transform 0.2s ease, box-shadow 0.2s ease, border-color 0.2s ease;
                        }
                        .filters button[aria-pressed='true'] {
                                border-color: rgba(37, 99, 235, 0.4);
                                box-shadow: 0 16px 30px rgba(37, 99, 235, 0.15);
                                background: rgba(37, 99, 235, 0.1);
                                transform: translateY(-2px);
                        }
                        .projects-grid {
                                display: grid;
                                gap: 2.5rem;
                        }
                        .project-card {
                                border-radius: 28px;
                                background: #fff;
                                box-shadow: var(--box-shadow);
                                padding: clamp(2rem, 4vw, 3rem);
                                display: grid;
                                gap: 1.5rem;
                        }
                        .project-card header {
                                display: flex;
                                flex-direction: column;
                                gap: 0.5rem;
                        }
                        .project-meta {
                                display: flex;
                                flex-wrap: wrap;
                                gap: 0.5rem;
                        }
                        .project-links {
                                display: flex;
                                flex-wrap: wrap;
                                gap: 1rem;
                        }
                        .project-links a {
                                text-decoration: none;
                                color: var(--accent);
                                font-weight: 600;
                                display: inline-flex;
                                gap: 0.35rem;
                                align-items: center;
                        }
                        .project-links a svg {
                                width: 16px;
                                height: 16px;
                        }
                        @media (max-width: 720px) {
                                main {
                                        margin-top: 5rem;
                                }
                        }
                </style>
        </head>
        <body>
                <Header />
                <main>
                        <header class="page-intro">
                                <p class="eyebrow">Project log</p>
                                <h1>Engineering programs with lasting signal.</h1>
                                <p>
                                        A detailed look at systems I have architected, shipped, or guided across aerospace, robotics, and developer platforms. Use the filters to explore by discipline.
                                </p>
                        </header>
                        <div class="filters" role="toolbar" aria-label="Filter projects by skill">
                                <button type="button" data-filter="all" aria-pressed="true">All</button>
                                {tags.map((tag) => (
                                        <button type="button" data-filter={tag.toLowerCase()} aria-pressed="false">{tag}</button>
                                ))}
                        </div>
                        <div class="projects-grid" data-project-grid>
                                {projects.map((project) => (
                                        <article class="project-card" data-tags={project.tags.map((tag) => tag.toLowerCase()).join(',')}>
                                                <header>
                                                        <h2>{project.title}</h2>
                                                        <p><strong>{project.year}</strong> · {project.summary}</p>
                                                </header>
                                                <p>{project.description}</p>
                                                <p><strong>{project.outcome}</strong></p>
                                                <div class="project-meta">
                                                        {project.tags.map((tag) => (
                                                                <span class="tag">{tag}</span>
                                                        ))}
                                                </div>
                                                <div class="project-links">
                                                        {project.link && (
                                                                <a href={project.link}>
                                                                        Read case study
                                                                        <svg viewBox="0 0 24 24" aria-hidden="true">
                                                                                <path fill="currentColor" d="M13.172 12 8.222 7.05l1.414-1.414L16 12l-6.364 6.364-1.414-1.414z" />
                                                                        </svg>
                                                                </a>
                                                        )}
                                                        {project.repo && (
                                                                <a href={project.repo}>
                                                                        View repository
                                                                        <svg viewBox="0 0 16 16" aria-hidden="true">
                                                                                <path
                                                                                        fill="currentColor"
                                                                                        d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8Z"
                                                                                />
                                                                        </svg>
                                                                </a>
                                                        )}
                                                </div>
                                        </article>
                                ))}
                        </div>
                </main>
                <Footer />
                <script is:inline>
                        document.addEventListener('DOMContentLoaded', () => {
                                const buttons = Array.from(document.querySelectorAll('[data-filter]'));
                                const cards = Array.from(document.querySelectorAll('[data-tags]'));
                                if (!buttons.length || !cards.length) return;

                                const setActive = (selected) => {
                                        buttons.forEach((button) => {
                                                const isActive = button.dataset.filter === selected;
                                                button.setAttribute('aria-pressed', isActive ? 'true' : 'false');
                                        });

                                        cards.forEach((card) => {
                                                const tags = (card.dataset.tags || '').split(',');
                                                const shouldShow = selected === 'all' || tags.includes(selected);
                                                card.style.display = shouldShow ? 'grid' : 'none';
                                                card.classList.toggle('project-card--hidden', !shouldShow);
                                        });
                                };

                                buttons.forEach((button) => {
                                        button.addEventListener('click', () => setActive(button.dataset.filter));
                                        button.addEventListener('keydown', (event) => {
                                                if (event.key === 'Enter' || event.key === ' ') {
                                                        event.preventDefault();
                                                        setActive(button.dataset.filter);
                                                }
                                        });
                                });
                        });
                </script>
        </body>
</html>
